/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/account/list": {
    /** The Account List endpoint returns all a list of accounts or products (and their associated data) held by the End User with a Provider. */
    get: operations["account-list-api"];
    /** This endpoint can be used to refresh the session of institution with MFA by sending new OTP to end user. Currently, E-Wallet can use this customization. */
    post: operations["account-list-api-post-mfa"];
    /** This endpoint can be used to retrieve latest list of accounts or products (and their associated data) held by the End User with a Provider by providing new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
    patch: operations["account-list-api-patch-mfa"];
  };
  "/account/detail": {
    /** Once you get the user access token using the widget, The Account endpoint allows developers to retrieve data associated with the specified ‘account_id’ in their backend. */
    get: operations["account-detail-api-2"];
    /** This endpoint can be used to refresh the session of an institution with MFA by sending a new OTP to the end-user. Currently, E-Wallet can use this customization. */
    post: operations["account-detail-api-post-mfa"];
    /** This endpoint can be used to retrieve data associated with the specified ‘account_id’ by providing a new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
    patch: operations["account-detail-api-3"];
  };
  "/transaction/list": {
    /** The Transactions endpoint allows clients to receive user-authorized transactions. Transactions data is standardized across financial institutions and accounts. */
    get: operations["transaction-api-1"];
    /** This endpoint can be used to refresh the session of an institution with MFA by sending a new OTP to end-user. Currently, E-Wallet can use this customization. */
    post: operations["account-detail-api-post-mfa-1"];
    /** This endpoint can be used to retrieve all transactions for the account connected by a user by providing a new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
    patch: operations["transaction-list-api-patch-mfa"];
  };
  "/statement": {
    /** The PDF statement GET API will allow downloading the PDF statement retrieved from the financial account based on the 'month' and 'year' parameters. */
    get: operations["statement-api"];
  };
  "/avg-balance": {
    /**
     * The Average Balance GET API will allow clients to receive user authorized average balance.
     * It can be generated for a selected period.
     */
    get: operations["average-balance-api"];
  };
  "/address/office": {
    /** This API helps to provide office addresses using the phone numbers and is available for Telkomsel number */
    get: operations["office-address-api"];
  };
  "/address/home": {
    /** This API helps to provide home addresses using the phone numbers and is available for Telkomsel number */
    get: operations["home-address-api"];
  };
  "/auth/ovo/otp": {
    post: operations["auth-api-in-ovo"];
  };
  "/auth/ovo/token": {
    post: operations["step-2-generate-token"];
  };
  "/auth/gopay/otp": {
    post: operations["step-1-generate-otp"];
  };
  "/auth/gopay/token": {
    post: operations["step-2-generate-token-1"];
  };
  "/auth/ecommerce/step1": {
    post: operations["step-1-generate-otp-1"];
  };
  "/auth/tokopedia/token": {
    post: operations["step-2-generate-token-for-tokopedia"];
  };
  "/auth/shopee/token": {
    post: operations["step-2-generate-token-for-shopee"];
  };
  "/transaction-balance-summary": {
    /** This API furnishes the data on monthly basics and helps you get the Beginning balance, Ending balance, Daily balance, Average balance, Income source, and expenses destination. */
    get: operations["balance-summary-api-1"];
  };
  "/identity/personal": {
    /** This API verifies the identity based on KTP number. */
    get: operations["identity-verification-api"];
  };
  "/identity/personal-selfie": {
    /** This API can also verify the similarities of selfies and KTP image apart from Name, Birthplace, Date of Birth. */
    get: operations["identity-verification-with-selfie-api"];
  };
  "/income/general": {
    /** This API helps you to get past companies' data of your end-users. */
    get: operations["general-info-api-1"];
  };
  "/income/employment": {
    /** This API helps you to get past companies' data of your end-users. */
    get: operations["past-companies-api-1"];
  };
  "/income/salary": {
    /** This API helps you to get past income data of your end-users. */
    get: operations["income-info-api"];
  };
  "/ecommerce/buyer/identity": {
    /** This API helps you to get basic information for buyers. */
    get: operations["buyer-identity-api-1"];
  };
  "/ecommerce/buyer/transaction": {
    /** This API gives you the list of transaction for any specific user. */
    get: operations["buyer-transaction-api"];
  };
  "/ecommerce/merchant/identity": {
    /** This API helps to provides basic information for merchant. */
    get: operations["merchant-transaction-api"];
  };
  "/ecommerce/merchant/transaction": {
    /** This APIs helps you to provide the transactions of merchant. */
    get: operations["merchant-transaction-api-1"];
  };
  "/ecommerce/merchant/income": {
    /** This API helps to provide the income for the merchant. */
    get: operations["merchant-income-api-1"];
  };
  "/auth/token": {
    /** In this step, you can generate client_id through public access token. */
    post: operations["step-1-generate-clientid-redirectref-2"];
  };
  "/auth/{clientId}": {
    /** In this step, you can generate unique identifier tokens for end-users. */
    post: operations["step-2-generate-user-access-token-2"];
  };
  "/institution/list": {
    /** This API will help to get a list of available institutions in Brick. */
    get: operations["get-institution-list"];
  };
  "/auth/ajaib/token": {
    post: operations["ajaib-step-2-generate-user-access-token"];
  };
  "/auth/bibit/otp": {
    post: operations["bibit-step-1-generate-otp"];
  };
  "/auth/bibit/token": {
    post: operations["bibit-step-2-generate-user-access-token"];
  };
  "/assets/profile": {
    /** This API helps you to get investment account's profile data of your end-users. */
    get: operations["profile-api"];
  };
  "/assets/portfolio": {
    /** This API helps you to get investment account's portfolio data of your end-users. */
    get: operations["portfolio-api"];
  };
  "/assets/transactions": {
    /** This API helps you to get investment account's transactional data of your end-users. */
    get: operations["portfolio-api-1"];
  };
  "/auth/dana/otp": {
    post: operations["step-1-generate-otp-2"];
  };
  "/auth/dana/token": {
    post: operations["step-2-generate-token-2"];
  };
  "/auth/shopeepay/otp": {
    post: operations["step-1-generate-otp-3"];
  };
  "/auth/shopeepay/token": {
    post: operations["step-2-generate-token-3"];
  };
  "/auth/ajaib/step1": {
    post: operations["ajaib-step-1-input-username-and-password"];
  };
}

export interface components {}

export interface operations {
  /** The Account List endpoint returns all a list of accounts or products (and their associated data) held by the End User with a Provider. */
  "account-list-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please regenerate public_access_token from APIs */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_headers */
                  code?: string;
                  /** @example Please use the API with User_access_token in the request headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User access token */
                  action?: string;
                  /** @example User_access_token is missing in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This endpoint can be used to refresh the session of institution with MFA by sending new OTP to end user. Currently, E-Wallet can use this customization. */
  "account-list-api-post-mfa": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_headers */
                  code?: string;
                  /** @example Please use the API with User_access_token in the request headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User access token */
                  action?: string;
                  /** @example Invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This endpoint can be used to retrieve latest list of accounts or products (and their associated data) held by the End User with a Provider by providing new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
  "account-list-api-patch-mfa": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Session_id field in request body */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Session_id field is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Unique session Id that is generated after successful connection */
          session_id?: string;
          /** @description OTP from the end-user */
          token?: string;
        };
      };
    };
  };
  /** Once you get the user access token using the widget, The Account endpoint allows developers to retrieve data associated with the specified ‘account_id’ in their backend. */
  "account-detail-api-2": {
    parameters: {
      query: {
        /** Unique primary key for institute for which we want to fetch the data */
        account_id: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                data?: unknown;
                error?: {
                  /** @example GET */
                  method?: string;
                  /** @example /v2/data/account/detail */
                  api?: string;
                  /** @example s8y95EGq41955985 */
                  job_id?: string;
                  /** @example wrong_parameters_in_request */
                  code?: string;
                  /** @example Please use correct Account_id in the request params */
                  message?: string;
                  /** @example End user should use the Account_id of respective institute */
                  action?: string;
                  /** @example Account_id is not correct in the request params */
                  reason?: string;
                };
                metadata?: {
                  /** @example Data */
                  entity?: string;
                  /** @example API */
                  source?: string;
                };
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Account_id in the request params */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Account_id is missing in request params */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This endpoint can be used to refresh the session of an institution with MFA by sending a new OTP to the end-user. Currently, E-Wallet can use this customization. */
  "account-detail-api-post-mfa": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid User_access_token in headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User_access_token */
                  action?: string;
                  /** @example invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This endpoint can be used to retrieve data associated with the specified ‘account_id’ by providing a new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
  "account-detail-api-3": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Account_id field in request body */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Account_id field is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Unique primary key for institute for which we want to fetch the details */
          account_id: string;
          /** @description Unique session id that generated after successful connection */
          session_id: string;
          /** @description OTP from the end-user */
          token: string;
        };
      };
    };
  };
  /** The Transactions endpoint allows clients to receive user-authorized transactions. Transactions data is standardized across financial institutions and accounts. */
  "transaction-api-1": {
    parameters: {
      query: {
        /** Returns transactions posted on or after this date. Default value is date as of the API request minus 3 months */
        from: unknown;
        /** Returns transactions up to and including this date. Default value is date as of the API request */
        to: unknown;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This endpoint can be used to refresh the session of an institution with MFA by sending a new OTP to end-user. Currently, E-Wallet can use this customization. */
  "account-detail-api-post-mfa-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid User_access_token in headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User_access_token */
                  action?: string;
                  /** @example invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This endpoint can be used to retrieve all transactions for the account connected by a user by providing a new OTP to refresh the account session. Currently, E-Wallet can use this customization. */
  "transaction-list-api-patch-mfa": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user. It should be called with bearer */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Session_id field in request body */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Session_id field is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description Returns transactions posted on or after this date. Default value is date as of the API request minus 3 months
           * @default YYYY-MM-DD
           */
          from: string;
          /**
           * @description Returns transactions up to and including this date. Default value is date as of the API request
           * @default YYYY-MM-DD
           */
          to: string;
          /** @description Unique Id for session */
          session_id: string;
          /** @description OTP from the end-user */
          token: string;
        };
      };
    };
  };
  /** The PDF statement GET API will allow downloading the PDF statement retrieved from the financial account based on the 'month' and 'year' parameters. */
  "statement-api": {
    parameters: {
      query: {
        /** Month for which statement is needed */
        month: string;
        /** Year for which statement is needed */
        year: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /**
   * The Average Balance GET API will allow clients to receive user authorized average balance.
   * It can be generated for a selected period.
   */
  "average-balance-api": {
    parameters: {
      query: {
        /** Starting period of the requested avg-balance */
        from: string;
        /** Ending period of the requested avg-balance */
        to: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps to provide office addresses using the phone numbers and is available for Telkomsel number */
  "office-address-api": {
    parameters: {
      query: {
        /** Unique ID for each request */
        request_id: string;
        /** The active phone number of the user (that starts with 62, e.g. 6281122334455)  *notes: please use 6285334207735 for testing in sandbox */
        phone_number: string;
        /** The declared home address of the user (as detail as possible, e.g. jln.Merpati No.2, RT.000/RW.000, Medan Petisah, Amplas, Medan, 20123 */
        office_address: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Phone_number in the request params */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Phone_number is missing in request params */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Verification */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Verification */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps to provide home addresses using the phone numbers and is available for Telkomsel number */
  "home-address-api": {
    parameters: {
      query: {
        /** Unique ID for each request */
        request_id: string;
        /** The active phone number of the user (that starts with 62, e.g. 6281122334455)  *notes: please use 6285334207735 for testing in sandbox */
        phone_number: string;
        /** The declared home address of the user (as detail as possible, e.g. jln.Merpati No.2, RT.000/RW.000, Medan Petisah, Amplas, Medan, 20123 */
        home_address?: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Phone_number in the request params */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Phone_number is missing in request params */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Verification */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  "auth-api-in-ovo": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please provide account credentials to get the access */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's OVO registered mobile number */
          username: string;
        };
      };
    };
  };
  "step-2-generate-token": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Ref_id in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Ref_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Otp_number in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Otp_number is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Pin in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Pin is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Device_id in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Device_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Username in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Username is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_headers */
              code?: string;
              /** @example Please use API with Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Public_access_token is missing from headers */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's OVO registered mobile number */
          username: string;
          /** @description Request identification of that request */
          ref_id: string;
          /** @description Device identification of that request */
          device_id: string;
          /** @description End-user's OVO PIN */
          pin: string;
          /** @description OTP that has been sent to the end-user mobile number (received from SMS via Mobile Number) or Link that will be sent to the end-user mobile number (received from SMS via Mobile Number) */
          otp_number: string;
        };
      };
    };
  };
  "step-1-generate-otp": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please provide account credentials to get the access */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's Gopay registered mobile number */
          username: string;
        };
      };
    };
  };
  "step-2-generate-token-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Unique_id in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Unique_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Otp in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Otp is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Otp_token in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Otp_token is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Session_id in the request body */
                  message?: string;
                  /** @example You can get the correct session_id from /v2/transaction/list post API */
                  action?: string;
                  /** @example Session_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Username in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Username is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's OVO registered mobile number */
          username: string;
          /** @description Request identification of that request */
          unique_id: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description OTP token that binds the OTP */
          otp_token: string;
          /** @description OTP (received from SMS via Mobile Number) */
          otp: string;
        };
      };
    };
  };
  "step-1-generate-otp-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": { [key: string]: unknown };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Unique Id for Institution */
          institution_id: string;
          /** @description End-user's E-commerce username/Email/Phone No. */
          username: string;
          /** @description End-user's E-commerce password */
          password: string;
        };
      };
    };
  };
  "step-2-generate-token-for-tokopedia": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** You can get this value from Response's header set-cookies fields of step-1 API (ie:/v2/auth) */
        cookies?: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": { [key: string]: unknown };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's E-commerce username/email/phone number) */
          username: string;
          /** @description End-user's E-commerce password */
          password: string;
          /** @description Request identification of that request */
          request_id: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description OTP token that binds the OTP (received from SMS via Mobile Number) or Can be empty string if user received Link instead of OTP */
          token: string;
        };
      };
    };
  };
  "step-2-generate-token-for-shopee": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** You can get this value from Response's header set-cookies fields of step-1 API (ie:/v2/auth) */
        cookies?: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": { [key: string]: unknown };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's E-commerce username/email/phone number) */
          username: string;
          /** @description End-user's E-commerce password */
          password: string;
          /** @description Request identification of that request */
          request_id: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description OTP token that binds the OTP (received from SMS via Mobile Number) or Can be empty string if user received Link instead of OTP */
          token: string;
        };
      };
    };
  };
  /** This API furnishes the data on monthly basics and helps you get the Beginning balance, Ending balance, Daily balance, Average balance, Income source, and expenses destination. */
  "balance-summary-api-1": {
    parameters: {
      query: {
        /** Starting date Form date(format - MM-YYYY) */
        from: string;
        /** End date till you want a data(format - MM-YYYY) */
        to: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API verifies the identity based on KTP number. */
  "identity-verification-api": {
    parameters: {
      query: {
        /** The 16 digits of KTP number of the user */
        nik: string;
        /** Full name of the user */
        name: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string;
              /** @example Please use valid Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Invalid public_access_token in headers */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Verification */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API can also verify the similarities of selfies and KTP image apart from Name, Birthplace, Date of Birth. */
  "identity-verification-with-selfie-api": {
    parameters: {
      query: {
        /** The 16 digits of KTP number of the user */
        nik: string;
        /** Full name of the user */
        name?: string;
        /** Birth Place (city) of the user */
        birth_place?: string;
        /** Birth Date of the user (DD-MM-YYYY) */
        birth_date?: unknown;
        /** Selfie image in Base64 encoded string converted from jpeg (max 500 kb) */
        image: string;
      };
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Phone_number in the request params */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Phone_number is missing in request params */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Verification */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps you to get past companies' data of your end-users. */
  "general-info-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please regenerate public_access_token from APIs */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid User_access_token in headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User_access_token */
                  action?: string;
                  /** @example invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This API helps you to get past companies' data of your end-users. */
  "past-companies-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please regenerate public_access_token from APIs */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid User_access_token in headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User_access_token */
                  action?: string;
                  /** @example invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This API helps you to get past income data of your end-users. */
  "income-info-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please regenerate public_access_token from APIs */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid User_access_token in headers */
                  message?: string;
                  /** @example Please revisit the API docs to understand the procedure to generate valid User_access_token */
                  action?: string;
                  /** @example invalid User_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  /** This API helps you to get basic information for buyers. */
  "buyer-identity-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API gives you the list of transaction for any specific user. */
  "buyer-transaction-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps to provides basic information for merchant. */
  "merchant-transaction-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This APIs helps you to provide the transactions of merchant. */
  "merchant-transaction-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps to provide the income for the merchant. */
  "merchant-income-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        "user-access-token": string;
      };
      query: {
        /** Returns transactions posted on or after this date. Default value is date of frist transaction available in the E-commerce */
        from?: unknown;
        /** Returns transactions up to and including this date. Default value is date as of the API request */
        to?: unknown;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** In this step, you can generate client_id through public access token. */
  "step-1-generate-clientid-redirectref-2": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer. */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 200
             */
            status?: number;
            data?: {
              /** @example We are successfully able to fetch data */
              message?: string;
              client_data?: {
                /**
                 * @default 0
                 * @example 1847
                 */
                client_id?: number;
                /** @example Brick */
                client_name?: string;
                /** @example null null */
                client_full_name?: string;
                /** @example qa-team@onebrick.io */
                client_email?: string;
                client_alias?: unknown;
                /** @example https://brick-company-logo.s3-ap-southeast-1.amazonaws.com/emptyProfile.png */
                client_image_url?: string;
                /** @example https://brick-company-logo.s3-ap-southeast-1.amazonaws.com/emptyProfile.png */
                client_favicon?: string;
                /**
                 * @default 0
                 * @example 2418403
                 */
                redirect_ref_id?: number;
              };
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with User_id in the request body */
              message?: string;
              /** @example Please share the unique identifier for end-user */
              action?: string;
              /** @example User_id is missing in request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string;
              /** @example Please use valid Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Invalid public_access_token in headers */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user unique identifier(It should be from clients system) */
          user_id: string;
        };
      };
    };
  };
  /** In this step, you can generate unique identifier tokens for end-users. */
  "step-2-generate-user-access-token-2": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
      path: {
        /** Unique client Id that is generated through Step 1 */
        client_id: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example QSfSezY739559874 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                data?: unknown;
                error?: {
                  /** @example POST */
                  method?: string;
                  /** @example /v2/data/auth */
                  api?: string;
                  /** @example P0RLI4L299608624 */
                  job_id?: string;
                  /** @example wrong_parameters_in_request */
                  code?: string;
                  /** @example Please use valid Username / Password in request body */
                  message?: string;
                  /** @example End-user should use correct Username and Password from KlikBCA Internet Banking */
                  action?: string;
                  /** @example Username / Password is not correct in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example Auth */
                  entity?: string;
                  /** @example API */
                  source?: string;
                };
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                data?: unknown;
                error?: {
                  /** @example POST */
                  method?: string;
                  /** @example /v2/data/auth */
                  api?: string;
                  /** @example MCb4uhUL99347464 */
                  job_id?: string;
                  /** @example wrong_parameters_in_request */
                  code?: string;
                  /** @example Please use valid Username / Password in request body */
                  message?: string;
                  /** @example End-user should use correct Username and Password from KlikBCA Internet Banking */
                  action?: string;
                  /** @example Username / Password is not correct in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example Auth */
                  entity?: string;
                  /** @example API */
                  source?: string;
                };
              };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string;
              /** @example Please use valid Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Invalid public_access_token in headers */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * Format: int32
           * @description Unique Institution Id for every institutions
           */
          institution_id: number;
          /** @description End-users username of the Institutions account */
          username: string;
          /** @description End-users password of the Institutions account */
          password: string;
        };
      };
    };
  };
  /** This API will help to get a list of available institutions in Brick. */
  "get-institution-list": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 200 */
      200: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 200
             */
            status?: number;
            data?: {
              /** @example We are able to find a list of institutions */
              message?: string;
              /**
               * @default 0
               * @example 2
               */
              count?: number;
              institution_list?: {
                /**
                 * @default 0
                 * @example 2
                 */
                id?: number;
                /** @example KlikBCA Internet Banking */
                name?: string;
                /** @example CENAIDJA */
                institution_code?: string;
                /** @example ID */
                country_code?: string;
                /** @example Indonesia */
                country_name?: string;
                /** @example #0d3dc8 */
                primary_color?: string;
                created_at?: unknown;
                /** @example 2021-07-26T14:58:03.000+00:00 */
                updated_at?: string;
                channels?: unknown;
                /**
                 * @default true
                 * @example false
                 */
                is_ocr_active?: boolean;
                /**
                 * @default true
                 * @example true
                 */
                automatic_verification?: boolean;
                /**
                 * @default true
                 * @example true
                 */
                pdf_verification?: boolean;
                /**
                 * @default true
                 * @example true
                 */
                passbook_verification?: boolean;
                /** @example Internet Banking */
                institution_type?: string;
              }[];
            };
            metadata?: {
              /** @example Data */
              entity?: string;
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Data */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
  };
  "ajaib-step-2-generate-user-access-token": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please provide account credentials to get the access */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Unique Id for Institution */
          institution_id: string;
          /** @description End-user's Investment Account username/Email/Phone No. */
          username: string;
          /** @description End-user's Investment Account password */
          password: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description End-user's Investment account pin */
          pin: string;
        };
      };
    };
  };
  "bibit-step-1-generate-otp": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please provide account credentials to get the access */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing from request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description ID of the institution */
          institution_id: string;
          /** @description End-user's Investment account username/email/phone number */
          username: string;
        };
      };
    };
  };
  "bibit-step-2-generate-user-access-token": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Username in the request body */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing in request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_headers */
                  code?: string;
                  /** @example Please use API with Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is missing from headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Unique Id for Institution */
          institution_id: string;
          /** @description End-user's Investment Account username/Email/Phone No. */
          username: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description End-user's Investment account OTP */
          otp: string;
        };
      };
    };
  };
  /** This API helps you to get investment account's profile data of your end-users. */
  "profile-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps you to get investment account's portfolio data of your end-users. */
  "portfolio-api": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  /** This API helps you to get investment account's transactional data of your end-users. */
  "portfolio-api-1": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
        /** Unique access token that is generated after a successful connection by the user */
        user_access_token: string;
      };
      query: {
        /** Returns transactions posted on or after this date */
        from?: unknown;
        /** Returns transactions up to and including this date */
        to?: unknown;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please regenerate public_access_token from APIs */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Data */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
  };
  "step-1-generate-otp-2": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": { [key: string]: unknown };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's Dana registered mobile number (e.g. +628122323123) */
          username: string;
        };
      };
    };
  };
  "step-2-generate-token-2": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": { [key: string]: unknown };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's Dana registered mobile number */
          username: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description OTP (received from SMS via Mobile Number) */
          otp: string;
          /**
           * Format: int32
           * @default null
           */
          institution_id?: number;
        };
      };
    };
  };
  "step-1-generate-otp-3": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please provide account credentials to get the access */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Username is missing from request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Password in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Password is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example invalid_parameters_in_headers */
              code?: string;
              /** @example Please use valid Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Invalid public_access_token in headers */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's ShopeePay registered mobile number (e.g. +628122323123) */
          username: string;
          /** @description End-users password of the Institutions account */
          password?: string;
        };
      };
    };
  };
  "step-2-generate-token-3": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 202
             */
            status?: number;
            data?: {
              /** @example KVWJUrwQ78333309 */
              job_id?: string;
              /** @example We are processing your request and will send the data in the callback URL. */
              message?: string;
            };
            metadata?: {
              /** @example {{API/Widget/Dashboard/SDK/Portal}} */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            error?: unknown;
          };
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Session_id in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Session_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Username in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Username is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Password in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Password is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 400
                 */
                status?: number;
                error?: {
                  /** @example missing_parameters_in_request */
                  code?: string;
                  /** @example Please use the API with Request_id in the request body */
                  message?: string;
                  /** @example Please revisit the API docs to know more about the required fields in API */
                  action?: string;
                  /** @example Request_id is missing in request body */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 401
             */
            status?: number;
            error?: {
              /** @example expired_parameters_in_headers */
              code?: string;
              /** @example Please use live Public_access_token in headers */
              message?: string;
              /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
              action?: string;
              /** @example Public_access_token is expired */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description End-user's ShopeePay registered mobile number */
          username: string;
          /** @description End-users password of the Institutions account */
          password?: string;
          /** @description Session identification of that request */
          session_id: string;
          /** @description Request identification of that request */
          request_id?: string;
          /** @description OTP (received from SMS via Mobile Number) */
          token: string;
        };
      };
    };
  };
  "ajaib-step-1-input-username-and-password": {
    parameters: {
      header: {
        /** Unique Identifier for Client(Public access token), It should be called with bearer */
        public_access_token: string;
      };
    };
    responses: {
      /** 202 */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** 400 */
      400: {
        content: {
          "application/json": {
            /**
             * @default 0
             * @example 400
             */
            status?: number;
            error?: {
              /** @example missing_parameters_in_request */
              code?: string;
              /** @example Please use the API with Username in the request body */
              message?: string;
              /** @example Please revisit the API docs to know more about the required fields in API */
              action?: string;
              /** @example Username is missing in request body */
              reason?: string;
            };
            metadata?: {
              /** @example API */
              source?: string;
              /** @example Auth */
              entity?: string;
            };
            data?: unknown;
          };
        };
      };
      /** 401 */
      401: {
        content: {
          "application/json":
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example expired_parameters_in_headers */
                  code?: string;
                  /** @example Please use live Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Public_access_token is expired */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              }
            | {
                /**
                 * @default 0
                 * @example 401
                 */
                status?: number;
                error?: {
                  /** @example invalid_parameters_in_headers */
                  code?: string;
                  /** @example Please use valid Public_access_token in headers */
                  message?: string;
                  /** @example Please generate valid public access token via /v2/auth/token APIs or contact to Brick sales team */
                  action?: string;
                  /** @example Invalid public_access_token in headers */
                  reason?: string;
                };
                metadata?: {
                  /** @example API */
                  source?: string;
                  /** @example Auth */
                  entity?: string;
                };
                data?: unknown;
              };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description ID of the institution */
          institution_id: string;
          /** @description End-user's Investment account username/email/phone number */
          username: string;
          /** @description End-user's Investment account password */
          password: string;
        };
      };
    };
  };
}

export interface external {}
